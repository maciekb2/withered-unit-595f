---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props as Props;
const { Content } = await render(post);
const allPosts = (await getCollection('blog')).sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);
const index = allPosts.findIndex((p) => p.id === post.id);
const prev = index > 0 ? allPosts[index - 1] : undefined;
const next = index < allPosts.length - 1 ? allPosts[index + 1] : undefined;
---

<BlogPost {...post.data} prev={prev} next={next}>
        <Content />
</BlogPost>
