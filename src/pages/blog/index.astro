---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import Sidebar from '../../components/Sidebar.astro';

// Sort posts so the newest ones appear first on the blog index
const posts = (await getCollection('blog')).sort((a, b) => {
  const dateDiff = b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
  return dateDiff === 0 ? b.id.localeCompare(a.id) : dateDiff;
});
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
                        main {
                                width: 960px;
                        }
                        .layout {
                                display: flex;
                                gap: 2rem;
                        }
                        .layout section {
                                flex: 1;
                        }
                        ul {
                                display: flex;
                                flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
                        .date {
                                margin: 0;
                                color: rgb(var(--gray));
                        }
                        .count {
                                margin-left: 0.5em;
                                color: rgb(var(--gray));
                        }
                        ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
                                ul li:first-child {
                                        margin-bottom: 0;
                                }
                                ul li:first-child .title {
                                        font-size: 1.563em;
                                }
                                .layout {
                                        flex-direction: column;
                                }
                        }
                </style>
	</head>
	<body>
		<Header />
                <main>
                        <div class="layout">
                        <section>

                                <ul>
                                        {
                                                posts.map((post) => (
                                                        <li>
                                                                <a href={`/blog/${post.id}/`}>
									<img width={720} height={360} src={post.data.heroImage} alt="" />
									<h4 class="title">{post.data.title}</h4>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</a>
							</li>
						))
					}
				</ul>
                        </section>
                        <Sidebar />
                        </div>
                </main>
               <Footer />
               <script type="module">
                       const list = document.getElementById('top-liked-list');
                       if (list) {
                               const items = Array.from(list.querySelectorAll('li'));
                               const slugs = items.map((li) => li.dataset.slug).filter(Boolean).join(',');
                               fetch(`/api/likes?slugs=${slugs}`)
                                       .then((r) => (r.ok ? r.json() : {}))
                                       .then((data) => {
                                               items.forEach((li) => {
                                                       const slug = li.dataset.slug;
                                                       if (slug && data[slug] != null) {
                                                               li.dataset.likes = data[slug];
                                                               const span = li.querySelector('.count');
                                                               if (span) span.textContent = data[slug];
                                                       }
                                               });
                                               items.sort(
                                                       (a, b) => parseInt(b.dataset.likes || '0') - parseInt(a.dataset.likes || '0')
                                               );
                                               items.forEach((li) => list.appendChild(li));
                                       });
                       }
               </script>
       </body>
</html>
